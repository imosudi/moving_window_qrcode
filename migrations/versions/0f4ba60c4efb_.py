"""empty message

Revision ID: 0f4ba60c4efb
Revises: 
Create Date: 2025-03-30 21:05:44.175515

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0f4ba60c4efb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('labtests',
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('testType', sa.String(length=100), nullable=True),
    sa.Column('testBottleType', sa.String(length=100), nullable=True),
    sa.Column('testName', sa.String(length=200), nullable=True),
    sa.Column('testmnemonics', sa.String(length=100), nullable=True),
    sa.Column('testDetails', sa.String(length=2000), nullable=True),
    sa.Column('testTAT', sa.String(length=100), nullable=True),
    sa.Column('testPrice', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('test_id')
    )
    op.create_table('patients',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('patientFirstname', sa.String(length=100), nullable=True),
    sa.Column('patientLastname', sa.String(length=100), nullable=True),
    sa.Column('patientMiddlename', sa.String(length=100), nullable=True),
    sa.Column('patientSex', sa.String(length=100), nullable=True),
    sa.Column('patientTitle', sa.String(length=100), nullable=True),
    sa.Column('ageGrade', sa.String(length=100), nullable=True),
    sa.Column('patientDateofBirth', sa.String(length=100), nullable=True),
    sa.Column('patientStatus', sa.String(length=100), nullable=True),
    sa.Column('patientType', sa.String(length=100), nullable=True),
    sa.Column('patientID', sa.String(length=100), nullable=True),
    sa.Column('patientEmail', sa.String(length=100), nullable=True),
    sa.Column('patientAltEmail', sa.String(length=100), nullable=True),
    sa.Column('patientPhonenumber', sa.String(length=100), nullable=True),
    sa.Column('patientAltPhonenumber', sa.String(length=100), nullable=True),
    sa.Column('patientwhatsappnumber', sa.String(length=100), nullable=True),
    sa.Column('patientAddress', sa.String(length=100), nullable=True),
    sa.Column('patientCity', sa.String(length=100), nullable=True),
    sa.Column('patientState', sa.String(length=100), nullable=True),
    sa.Column('patientCountry', sa.String(length=100), nullable=True),
    sa.Column('patientpersonalEnroledby', sa.String(length=100), nullable=True),
    sa.Column('patientCompanyname', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateContactperson', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateEmail', sa.String(length=100), nullable=True),
    sa.Column('patientAltCorporateEmail', sa.String(length=100), nullable=True),
    sa.Column('patientCorporatePhone', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateAltPhone', sa.String(length=100), nullable=True),
    sa.Column('patientCorporatewhatsappnumber', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateAddress', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateCity', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateState', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateCountry', sa.String(length=100), nullable=True),
    sa.Column('patientCorporateEnroledby', sa.String(length=100), nullable=True),
    sa.Column('enrolment_Time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('patient_id'),
    sa.UniqueConstraint('patientID')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('CurrentpatientID', sa.String(length=100), nullable=True),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('fullName', sa.String(length=100), nullable=True),
    sa.Column('regtype', sa.String(length=100), nullable=True),
    sa.Column('sex', sa.String(length=100), nullable=True),
    sa.Column('billto', sa.String(length=100), nullable=True),
    sa.Column('testspriority', sa.String(length=100), nullable=True),
    sa.Column('testscheduletype', sa.String(length=100), nullable=True),
    sa.Column('subtotal', sa.String(length=100), nullable=True),
    sa.Column('discount', sa.String(length=100), nullable=True),
    sa.Column('equalltax', sa.String(length=100), nullable=True),
    sa.Column('total', sa.String(length=100), nullable=True),
    sa.Column('paymentmethod', sa.String(length=100), nullable=True),
    sa.Column('payment', sa.String(length=100), nullable=True),
    sa.Column('referenceOrchange', sa.String(length=200), nullable=True),
    sa.Column('sessionconfirm', sa.String(length=100), nullable=True),
    sa.Column('paymentconfirm', sa.String(length=100), nullable=True),
    sa.Column('cashier', sa.String(length=100), nullable=True),
    sa.Column('invoicemnemonics', sa.String(length=2100), nullable=True),
    sa.Column('invoicetestname', sa.String(length=2100), nullable=True),
    sa.Column('invoiceprice', sa.String(length=2100), nullable=True),
    sa.Column('invoicetat', sa.String(length=2900), nullable=True),
    sa.Column('transactTime', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('phlebotomy_processed', sa.Boolean(), nullable=True),
    sa.Column('paymentupdateamount', sa.String(length=100), nullable=True),
    sa.Column('paymentupdateby', sa.String(length=100), nullable=True),
    sa.Column('paymentupdateTime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('transaction_id'),
    sa.UniqueConstraint('barcode')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=100), nullable=True),
    sa.Column('current_login_ip', sa.String(length=100), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('phonenumber', sa.String(length=100), nullable=True),
    sa.Column('altnumber', sa.String(length=100), nullable=True),
    sa.Column('designation', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('zip_code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phonenumber')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_table('posts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('user')
    op.drop_table('transactions')
    op.drop_table('role')
    op.drop_table('patients')
    op.drop_table('labtests')
    # ### end Alembic commands ###
